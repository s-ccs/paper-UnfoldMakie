---
title: 'UnfoldMakie.jl: A Julia package for ERP visualization'

tags:
  - Julia
  - Event-related potentials
  - visualization
  - interactivity 
  - user study
authors:
  - name: Vladimir Mikheev
    orcid: 0000-0002-4738-6655
    equal-contrib: true
    affiliation: 1
  - name: Benedikt Ehinger
    orcid: 0000-0002-6276-3332
    equal-contrib: true
    affiliation: "1, 2"
affiliations:
 - name: University of Stuttgart, Institute for Visualization and Interactive Systems, Germany
   index: 1
 - name: University of Stuttgart, Stuttgart Center for Simulation Science, Germany
   index: 2

date: 30 October 2024
bibliography: paper.bib

---


= Statement of need

`UnfoldMakie.jl` is a Julia package for visualization of electroencephalography (EEG), with a focus on event-related potentials (ERPs), especially regression-ERPs (rERPs). It can accompany Unfold.jl @ehinger2019unfold, a toolbox for regression-ERP analysis, but is equivalently a standalone tool and independent from Unfold.jl).

In an earlier study @mikheev2024art, we asked novice and expert practitioners for insights into their ERP visualization practices, and consequently used their responses to improve UnfoldMakie.jl.

UnfoldMakie.jl fills the gap as one of the only dedicated EEG visualization libraries with a focus on speed, ease of use, adaptability and detailed documentation. At the same time, it still allows explorative analysis (zooming/panning) and vector graphics with publication-ready figures. This is achieved by the modularity of Makie.jl @danisch2021makie, which allows to switch between two backends: CPU-supported vector graphics CairoMakie.jl and GPU-supported interactive GLMakie.jl and WGLMakie.jl.

Anyone who works with EEG, MEG, ERP, iEEG or other time-series data is a target audience of this package.

= Functionality


UnfoldMakie.jl has the following benefits:
- Fast. Julia allows to plot complex figures fast. For instance, it is able to plot one figure with 20 topoplots in 0.7 seconds, which is x-times faster, compared to MNE / MATLAB. 
- Highly adaptable. The package is primarily based on Unfold.jl, Makie.jl and AlgebraOfGraphics.jl.
- Customable. Majority of EEG researchers preferred flexibility of coding as the most important feature of the tool. That's why we allowed users to flexibly customize different aspects of the plot. 
- Documented. Extensive documentation with many usage examples.
- Interactive. Several plots make use of Observables.jl which allows fast updating of the underlying data. Several plots already have predefined interactive features.
- Scientific colormaps by default. According to our earlier study @mikheev2024art, 40% of EEG researchers do not know about the issue of scientific color maps.

We currently support nine general EEG plot types:

#figure(
  image("complex_plot.png", width: 80%),
  caption: [8 plots generated by UnfoldMakie.jl. A) ERP plot, B) Butterfly plot, C) Topoplot, D) Topoplot timeseries, E) ERP image @jung1998analyzing, G) Channel image, H) Parallel coordinate plot @ten2006design.],
) <glacier>

Also we support two Unfold-specific plots: Design matrices and Spline plots.

= State of the field

There are dozens of libraries for ERP visualization in Python and MATLAB. The most EEG practitioners (82%) have experience with non-visualization specific MATLAB-based tools like EEGLAB @delorme2004eeglab, FieldTrip @oostenveld2011fieldtrip, ERPLAB @lopez2014erplab and Brainstorm @tadel2019meg. Also, EEGVIS @ehigner_2018eegvis could be mentioned. 

The Python-based MNE @Gramfort_MEG_and_EEG_2013 (41%) and commercial software Brain Vision Analyzer (22%) also showed significant usage, as well as custom scripts written in programming languages such as R, Python, Julia (42%).

There are not many EEG/ERP visualization libraries on Julia. Currently, we could find NeuroAnalyzer.jl @Wysokinski_NeuroAnalyzer, EEGToolkit.jl @Pereyra_EEGToolkit, Neuroimaging.jl @Luke_Neuroimaging.  However they are more focused on analysis of raw EEG data, while our package is more specialized for visualization of ERPs and rERPs. Also there are #link("https://julianeuro.github.io/packages")[traces] of many abandoned projects.

= Funding
Funded by the Deutsche Forschungsgemeinschaft (DG, German Research Foundation) – Project-ID 251654672 – TRR 161.

= Acknowledgements

We acknowledge contributions from Daniel Baumgartner, Niklas Gärtner, Soren Doring, Fadil Furkan Lokman, Judith Schepers, René Skukies. 

#bibliography("paper.bib")


